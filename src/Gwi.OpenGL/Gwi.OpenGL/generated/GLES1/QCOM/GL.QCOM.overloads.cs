// This file is auto generated, do not edit.
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Gwi.OpenGL.GLES1
{
#pragma warning disable IDE1006 // Naming Styles

    public static class QCOMOverloads
    {
        // GetDriverControlsQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void GetDriverControlsQCOM(this GL.QCOMExtension glInstance, ref int num, Span<uint> driverControls)
        {
            fixed (int* num_ptr = &num) // RefInsteadOfPointerLayer
            {
                var size = (int)(driverControls.Length);
                fixed (uint* driverControls_ptr = driverControls) // SpanOrArrayLayer
                {
                    glInstance.GetDriverControlsQCOM(num_ptr, size, driverControls_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void GetDriverControlsQCOM(this GL.QCOMExtension glInstance, ref int num, uint[] driverControls)
        {
            fixed (int* num_ptr = &num) // RefInsteadOfPointerLayer
            {
                var size = (int)(driverControls.Length);
                fixed (uint* driverControls_ptr = driverControls) // SpanOrArrayLayer
                {
                    glInstance.GetDriverControlsQCOM(num_ptr, size, driverControls_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void GetDriverControlsQCOM(this GL.QCOMExtension glInstance, ref int num, int size, ref uint driverControls)
        {
            fixed (int* num_ptr = &num) // RefInsteadOfPointerLayer
            fixed (uint* driverControls_ptr = &driverControls) // RefInsteadOfPointerLayer
            {
                glInstance.GetDriverControlsQCOM(num_ptr, size, driverControls_ptr);
            }
        }

        // GetDriverControlStringQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.OutToReturnOverloader
        public static unsafe string GetDriverControlStringQCOM(this GL.QCOMExtension glInstance, uint driverControl, int bufSize, ref int length)
        {
            string driverControlString;
            fixed (int* length_ptr = &length) // RefInsteadOfPointerLayer
            {
                var driverControlString_ptr = (byte*)Marshal.AllocCoTaskMem(bufSize);
                glInstance.GetDriverControlStringQCOM(driverControl, bufSize, length_ptr, driverControlString_ptr);
                driverControlString = Marshal.PtrToStringUTF8((IntPtr)driverControlString_ptr)!;
                Marshal.FreeCoTaskMem((IntPtr)driverControlString_ptr);
            }
            return driverControlString;
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void GetDriverControlStringQCOM(this GL.QCOMExtension glInstance, uint driverControl, int bufSize, ref int length, out string driverControlString)
        {
            fixed (int* length_ptr = &length) // RefInsteadOfPointerLayer
            {
                var driverControlString_ptr = (byte*)Marshal.AllocCoTaskMem(bufSize);
                glInstance.GetDriverControlStringQCOM(driverControl, bufSize, length_ptr, driverControlString_ptr);
                driverControlString = Marshal.PtrToStringUTF8((IntPtr)driverControlString_ptr)!;
                Marshal.FreeCoTaskMem((IntPtr)driverControlString_ptr);
            }
        }

        // ExtGetTexturesQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetTexturesQCOM(this GL.QCOMExtension glInstance, ref TextureHandle textures, int maxTextures, ref int numTextures)
        {
            fixed (TextureHandle* textures_ptr = &textures) // RefInsteadOfPointerLayer
            fixed (int* numTextures_ptr = &numTextures) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetTexturesQCOM(textures_ptr, maxTextures, numTextures_ptr);
            }
        }

        // ExtGetBuffersQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetBuffersQCOM(this GL.QCOMExtension glInstance, Span<BufferHandle> buffers, Span<int> numBuffers)
        {
            var maxBuffers = (int)(buffers.Length);
            fixed (BufferHandle* buffers_ptr = buffers) // SpanOrArrayLayer
            {
                fixed (int* numBuffers_ptr = numBuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetBuffersQCOM(buffers_ptr, maxBuffers, numBuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetBuffersQCOM(this GL.QCOMExtension glInstance, BufferHandle[] buffers, int[] numBuffers)
        {
            var maxBuffers = (int)(buffers.Length);
            fixed (BufferHandle* buffers_ptr = buffers) // SpanOrArrayLayer
            {
                fixed (int* numBuffers_ptr = numBuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetBuffersQCOM(buffers_ptr, maxBuffers, numBuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetBuffersQCOM(this GL.QCOMExtension glInstance, ref BufferHandle buffers, int maxBuffers, ref int numBuffers)
        {
            fixed (BufferHandle* buffers_ptr = &buffers) // RefInsteadOfPointerLayer
            fixed (int* numBuffers_ptr = &numBuffers) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetBuffersQCOM(buffers_ptr, maxBuffers, numBuffers_ptr);
            }
        }

        // ExtGetRenderbuffersQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetRenderbuffersQCOM(this GL.QCOMExtension glInstance, Span<RenderbufferHandle> renderbuffers, Span<int> numRenderbuffers)
        {
            var maxRenderbuffers = (int)(renderbuffers.Length);
            fixed (RenderbufferHandle* renderbuffers_ptr = renderbuffers) // SpanOrArrayLayer
            {
                fixed (int* numRenderbuffers_ptr = numRenderbuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetRenderbuffersQCOM(renderbuffers_ptr, maxRenderbuffers, numRenderbuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetRenderbuffersQCOM(this GL.QCOMExtension glInstance, RenderbufferHandle[] renderbuffers, int[] numRenderbuffers)
        {
            var maxRenderbuffers = (int)(renderbuffers.Length);
            fixed (RenderbufferHandle* renderbuffers_ptr = renderbuffers) // SpanOrArrayLayer
            {
                fixed (int* numRenderbuffers_ptr = numRenderbuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetRenderbuffersQCOM(renderbuffers_ptr, maxRenderbuffers, numRenderbuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetRenderbuffersQCOM(this GL.QCOMExtension glInstance, ref RenderbufferHandle renderbuffers, int maxRenderbuffers, ref int numRenderbuffers)
        {
            fixed (RenderbufferHandle* renderbuffers_ptr = &renderbuffers) // RefInsteadOfPointerLayer
            fixed (int* numRenderbuffers_ptr = &numRenderbuffers) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetRenderbuffersQCOM(renderbuffers_ptr, maxRenderbuffers, numRenderbuffers_ptr);
            }
        }

        // ExtGetFramebuffersQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetFramebuffersQCOM(this GL.QCOMExtension glInstance, Span<FramebufferHandle> framebuffers, Span<int> numFramebuffers)
        {
            var maxFramebuffers = (int)(framebuffers.Length);
            fixed (FramebufferHandle* framebuffers_ptr = framebuffers) // SpanOrArrayLayer
            {
                fixed (int* numFramebuffers_ptr = numFramebuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetFramebuffersQCOM(framebuffers_ptr, maxFramebuffers, numFramebuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetFramebuffersQCOM(this GL.QCOMExtension glInstance, FramebufferHandle[] framebuffers, int[] numFramebuffers)
        {
            var maxFramebuffers = (int)(framebuffers.Length);
            fixed (FramebufferHandle* framebuffers_ptr = framebuffers) // SpanOrArrayLayer
            {
                fixed (int* numFramebuffers_ptr = numFramebuffers) // SpanOrArrayLayer
                {
                    glInstance.ExtGetFramebuffersQCOM(framebuffers_ptr, maxFramebuffers, numFramebuffers_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetFramebuffersQCOM(this GL.QCOMExtension glInstance, ref FramebufferHandle framebuffers, int maxFramebuffers, ref int numFramebuffers)
        {
            fixed (FramebufferHandle* framebuffers_ptr = &framebuffers) // RefInsteadOfPointerLayer
            fixed (int* numFramebuffers_ptr = &numFramebuffers) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetFramebuffersQCOM(framebuffers_ptr, maxFramebuffers, numFramebuffers_ptr);
            }
        }

        // ExtGetTexLevelParameterivQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetTexLevelParameterivQCOM(this GL.QCOMExtension glInstance, TextureHandle texture, GLEnum face, int level, GLEnum pname, ref int parameters)
        {
            fixed (int* parameters_ptr = &parameters) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetTexLevelParameterivQCOM(texture, face, level, pname, parameters_ptr);
            }
        }

        // ExtGetTexSubImageQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.VoidPtrToIntPtrOverloader
        public static unsafe void ExtGetTexSubImageQCOM(this GL.QCOMExtension glInstance, GLEnum target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr texels)
        {
            var texels_vptr = (void*)texels;
            glInstance.ExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels_vptr);
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetTexSubImageQCOM<T1>(this GL.QCOMExtension glInstance, GLEnum target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, ref T1 texels)
            where T1 : unmanaged
        {
            fixed (void* texels_ptr = &texels) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels_ptr);
            }
        }

        // ExtGetShadersQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetShadersQCOM(this GL.QCOMExtension glInstance, Span<ShaderHandle> shaders, Span<int> numShaders)
        {
            var maxShaders = (int)(shaders.Length);
            fixed (ShaderHandle* shaders_ptr = shaders) // SpanOrArrayLayer
            {
                fixed (int* numShaders_ptr = numShaders) // SpanOrArrayLayer
                {
                    glInstance.ExtGetShadersQCOM(shaders_ptr, maxShaders, numShaders_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetShadersQCOM(this GL.QCOMExtension glInstance, ShaderHandle[] shaders, int[] numShaders)
        {
            var maxShaders = (int)(shaders.Length);
            fixed (ShaderHandle* shaders_ptr = shaders) // SpanOrArrayLayer
            {
                fixed (int* numShaders_ptr = numShaders) // SpanOrArrayLayer
                {
                    glInstance.ExtGetShadersQCOM(shaders_ptr, maxShaders, numShaders_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetShadersQCOM(this GL.QCOMExtension glInstance, ref ShaderHandle shaders, int maxShaders, ref int numShaders)
        {
            fixed (ShaderHandle* shaders_ptr = &shaders) // RefInsteadOfPointerLayer
            fixed (int* numShaders_ptr = &numShaders) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetShadersQCOM(shaders_ptr, maxShaders, numShaders_ptr);
            }
        }

        // ExtGetProgramsQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetProgramsQCOM(this GL.QCOMExtension glInstance, Span<ProgramHandle> programs, Span<int> numPrograms)
        {
            var maxPrograms = (int)(programs.Length);
            fixed (ProgramHandle* programs_ptr = programs) // SpanOrArrayLayer
            {
                fixed (int* numPrograms_ptr = numPrograms) // SpanOrArrayLayer
                {
                    glInstance.ExtGetProgramsQCOM(programs_ptr, maxPrograms, numPrograms_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ExtGetProgramsQCOM(this GL.QCOMExtension glInstance, ProgramHandle[] programs, int[] numPrograms)
        {
            var maxPrograms = (int)(programs.Length);
            fixed (ProgramHandle* programs_ptr = programs) // SpanOrArrayLayer
            {
                fixed (int* numPrograms_ptr = numPrograms) // SpanOrArrayLayer
                {
                    glInstance.ExtGetProgramsQCOM(programs_ptr, maxPrograms, numPrograms_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetProgramsQCOM(this GL.QCOMExtension glInstance, ref ProgramHandle programs, int maxPrograms, ref int numPrograms)
        {
            fixed (ProgramHandle* programs_ptr = &programs) // RefInsteadOfPointerLayer
            fixed (int* numPrograms_ptr = &numPrograms) // RefInsteadOfPointerLayer
            {
                glInstance.ExtGetProgramsQCOM(programs_ptr, maxPrograms, numPrograms_ptr);
            }
        }

        // ExtGetProgramBinarySourceQCOM overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.OutToReturnOverloader
        public static unsafe string ExtGetProgramBinarySourceQCOM(this GL.QCOMExtension glInstance, ProgramHandle program, ShaderType shadertype, ref int length)
        {
            string source;
            fixed (int* length_ptr = &length) // RefInsteadOfPointerLayer
            {
                var source_ptr = (byte*)Marshal.AllocCoTaskMem(*length_ptr);
                glInstance.ExtGetProgramBinarySourceQCOM(program, shadertype, source_ptr, length_ptr);
                source = Marshal.PtrToStringUTF8((IntPtr)source_ptr)!;
                Marshal.FreeCoTaskMem((IntPtr)source_ptr);
            }
            return source;
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ExtGetProgramBinarySourceQCOM(this GL.QCOMExtension glInstance, ProgramHandle program, ShaderType shadertype, out string source, ref int length)
        {
            fixed (int* length_ptr = &length) // RefInsteadOfPointerLayer
            {
                var source_ptr = (byte*)Marshal.AllocCoTaskMem(*length_ptr);
                glInstance.ExtGetProgramBinarySourceQCOM(program, shadertype, source_ptr, length_ptr);
                source = Marshal.PtrToStringUTF8((IntPtr)source_ptr)!;
                Marshal.FreeCoTaskMem((IntPtr)source_ptr);
            }
        }
    }

#pragma warning restore IDE1006 // Naming Styles
}
