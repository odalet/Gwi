// This file is auto generated, do not edit.
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Gwi.OpenGL.GLES1
{
#pragma warning disable IDE1006 // Naming Styles

    public static class IMGOverloads
    {
        // ClipPlanefIMG overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ClipPlanefIMG(this GL.IMGExtension glInstance, ClipPlaneName p, ReadOnlySpan<float> eqn)
        {
            fixed (float* eqn_ptr = eqn) // SpanOrArrayLayer
            {
                glInstance.ClipPlanefIMG(p, eqn_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ClipPlanefIMG(this GL.IMGExtension glInstance, ClipPlaneName p, float[] eqn)
        {
            fixed (float* eqn_ptr = eqn) // SpanOrArrayLayer
            {
                glInstance.ClipPlanefIMG(p, eqn_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ClipPlanefIMG(this GL.IMGExtension glInstance, ClipPlaneName p, in float eqn)
        {
            fixed (float* eqn_ptr = &eqn) // RefInsteadOfPointerLayer
            {
                glInstance.ClipPlanefIMG(p, eqn_ptr);
            }
        }

        // ClipPlanexIMG overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ClipPlanexIMG(this GL.IMGExtension glInstance, ClipPlaneName p, ReadOnlySpan<int> eqn)
        {
            fixed (int* eqn_ptr = eqn) // SpanOrArrayLayer
            {
                glInstance.ClipPlanexIMG(p, eqn_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ClipPlanexIMG(this GL.IMGExtension glInstance, ClipPlaneName p, int[] eqn)
        {
            fixed (int* eqn_ptr = eqn) // SpanOrArrayLayer
            {
                glInstance.ClipPlanexIMG(p, eqn_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ClipPlanexIMG(this GL.IMGExtension glInstance, ClipPlaneName p, in int eqn)
        {
            fixed (int* eqn_ptr = &eqn) // RefInsteadOfPointerLayer
            {
                glInstance.ClipPlanexIMG(p, eqn_ptr);
            }
        }
    }

#pragma warning restore IDE1006 // Naming Styles
}
