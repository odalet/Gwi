// This file is auto generated, do not edit.
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Gwi.OpenGL.GL4
{
#pragma warning disable IDE1006 // Naming Styles

    public static class SUNOverloads
    {
        // ReplacementCodeuivSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuivSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> code)
        {
            fixed (uint* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeuivSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuivSUN(this GL.SUNExtension glInstance, uint[] code)
        {
            fixed (uint* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeuivSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuivSUN(this GL.SUNExtension glInstance, in uint code)
        {
            fixed (uint* code_ptr = &code) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuivSUN(code_ptr);
            }
        }

        // ReplacementCodeusvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeusvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<ushort> code)
        {
            fixed (ushort* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeusvSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeusvSUN(this GL.SUNExtension glInstance, ushort[] code)
        {
            fixed (ushort* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeusvSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeusvSUN(this GL.SUNExtension glInstance, in ushort code)
        {
            fixed (ushort* code_ptr = &code) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeusvSUN(code_ptr);
            }
        }

        // ReplacementCodeubvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeubvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<byte> code)
        {
            fixed (byte* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeubvSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeubvSUN(this GL.SUNExtension glInstance, byte[] code)
        {
            fixed (byte* code_ptr = code) // SpanOrArrayLayer
            {
                glInstance.ReplacementCodeubvSUN(code_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeubvSUN(this GL.SUNExtension glInstance, in byte code)
        {
            fixed (byte* code_ptr = &code) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeubvSUN(code_ptr);
            }
        }

        // Color4ubVertex2fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4ubVertex2fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<byte> c, ReadOnlySpan<float> v)
        {
            fixed (byte* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color4ubVertex2fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4ubVertex2fvSUN(this GL.SUNExtension glInstance, byte[] c, float[] v)
        {
            fixed (byte* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color4ubVertex2fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void Color4ubVertex2fvSUN(this GL.SUNExtension glInstance, in byte c, in float v)
        {
            fixed (byte* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.Color4ubVertex2fvSUN(c_ptr, v_ptr);
            }
        }

        // Color4ubVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4ubVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<byte> c, ReadOnlySpan<float> v)
        {
            fixed (byte* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color4ubVertex3fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4ubVertex3fvSUN(this GL.SUNExtension glInstance, byte[] c, float[] v)
        {
            fixed (byte* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color4ubVertex3fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void Color4ubVertex3fvSUN(this GL.SUNExtension glInstance, in byte c, in float v)
        {
            fixed (byte* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.Color4ubVertex3fvSUN(c_ptr, v_ptr);
            }
        }

        // Color3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> c, ReadOnlySpan<float> v)
        {
            fixed (float* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color3fVertex3fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] c, float[] v)
        {
            fixed (float* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Color3fVertex3fvSUN(c_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void Color3fVertex3fvSUN(this GL.SUNExtension glInstance, in float c, in float v)
        {
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.Color3fVertex3fvSUN(c_ptr, v_ptr);
            }
        }

        // Normal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Normal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (float* n_ptr = n) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Normal3fVertex3fvSUN(n_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Normal3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] n, float[] v)
        {
            fixed (float* n_ptr = n) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.Normal3fVertex3fvSUN(n_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void Normal3fVertex3fvSUN(this GL.SUNExtension glInstance, in float n, in float v)
        {
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.Normal3fVertex3fvSUN(n_ptr, v_ptr);
            }
        }

        // Color4fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> c, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (float* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.Color4fNormal3fVertex3fvSUN(c_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void Color4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] c, float[] n, float[] v)
        {
            fixed (float* c_ptr = c) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.Color4fNormal3fVertex3fvSUN(c_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void Color4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in float c, in float n, in float v)
        {
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.Color4fNormal3fVertex3fvSUN(c_ptr, n_ptr, v_ptr);
            }
        }

        // TexCoord2fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.TexCoord2fVertex3fvSUN(tc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.TexCoord2fVertex3fvSUN(tc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, in float tc, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord2fVertex3fvSUN(tc_ptr, v_ptr);
            }
        }

        // TexCoord4fVertex4fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord4fVertex4fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.TexCoord4fVertex4fvSUN(tc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord4fVertex4fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.TexCoord4fVertex4fvSUN(tc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord4fVertex4fvSUN(this GL.SUNExtension glInstance, in float tc, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord4fVertex4fvSUN(tc_ptr, v_ptr);
            }
        }

        // TexCoord2fColor4ubVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<byte> c, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (byte* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fColor4ubVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, float[] tc, byte[] c, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (byte* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fColor4ubVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord2fColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, in float tc, in byte c, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (byte* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord2fColor4ubVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
            }
        }

        // TexCoord2fColor3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> c, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fColor3fVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] c, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fColor3fVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord2fColor3fVertex3fvSUN(this GL.SUNExtension glInstance, in float tc, in float c, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord2fColor3fVertex3fvSUN(tc_ptr, c_ptr, v_ptr);
            }
        }

        // TexCoord2fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fNormal3fVertex3fvSUN(tc_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] n, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.TexCoord2fNormal3fVertex3fvSUN(tc_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in float tc, in float n, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord2fNormal3fVertex3fvSUN(tc_ptr, n_ptr, v_ptr);
            }
        }

        // TexCoord2fColor4fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> c, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.TexCoord2fColor4fNormal3fVertex3fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] c, float[] n, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.TexCoord2fColor4fNormal3fVertex3fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in float tc, in float c, in float n, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord2fColor4fNormal3fVertex3fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
            }
        }

        // TexCoord4fColor4fNormal3fVertex4fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord4fColor4fNormal3fVertex4fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<float> tc, ReadOnlySpan<float> c, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.TexCoord4fColor4fNormal3fVertex4fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void TexCoord4fColor4fNormal3fVertex4fvSUN(this GL.SUNExtension glInstance, float[] tc, float[] c, float[] n, float[] v)
        {
            fixed (float* tc_ptr = tc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.TexCoord4fColor4fNormal3fVertex4fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void TexCoord4fColor4fNormal3fVertex4fvSUN(this GL.SUNExtension glInstance, in float tc, in float c, in float n, in float v)
        {
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.TexCoord4fColor4fNormal3fVertex4fvSUN(tc_ptr, c_ptr, n_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.ReplacementCodeuiVertex3fvSUN(rc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* v_ptr = v) // SpanOrArrayLayer
                {
                    glInstance.ReplacementCodeuiVertex3fvSUN(rc_ptr, v_ptr);
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiVertex3fvSUN(rc_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiColor4ubVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<byte> c, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (byte* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiColor4ubVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, byte[] c, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (byte* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiColor4ubVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiColor4ubVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in byte c, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (byte* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiColor4ubVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiColor3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> c, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiColor3fVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor3fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] c, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiColor3fVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiColor3fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float c, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiColor3fVertex3fvSUN(rc_ptr, c_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiNormal3fVertex3fvSUN(rc_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] n, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* n_ptr = n) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiNormal3fVertex3fvSUN(rc_ptr, n_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float n, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiNormal3fVertex3fvSUN(rc_ptr, n_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiColor4fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> c, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.ReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] c, float[] n, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* c_ptr = c) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.ReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc_ptr, c_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float c, in float n, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc_ptr, c_ptr, n_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiTexCoord2fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> tc, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiTexCoord2fVertex3fvSUN(rc_ptr, tc_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] tc, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* v_ptr = v) // SpanOrArrayLayer
                    {
                        glInstance.ReplacementCodeuiTexCoord2fVertex3fvSUN(rc_ptr, tc_ptr, v_ptr);
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float tc, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiTexCoord2fVertex3fvSUN(rc_ptr, tc_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> tc, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] tc, float[] n, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* n_ptr = n) // SpanOrArrayLayer
                    {
                        fixed (float* v_ptr = v) // SpanOrArrayLayer
                        {
                            glInstance.ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, n_ptr, v_ptr);
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float tc, in float n, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, n_ptr, v_ptr);
            }
        }

        // ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, ReadOnlySpan<uint> rc, ReadOnlySpan<float> tc, ReadOnlySpan<float> c, ReadOnlySpan<float> n, ReadOnlySpan<float> v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* c_ptr = c) // SpanOrArrayLayer
                    {
                        fixed (float* n_ptr = n) // SpanOrArrayLayer
                        {
                            fixed (float* v_ptr = v) // SpanOrArrayLayer
                            {
                                glInstance.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, c_ptr, n_ptr, v_ptr);
                            }
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, uint[] rc, float[] tc, float[] c, float[] n, float[] v)
        {
            fixed (uint* rc_ptr = rc) // SpanOrArrayLayer
            {
                fixed (float* tc_ptr = tc) // SpanOrArrayLayer
                {
                    fixed (float* c_ptr = c) // SpanOrArrayLayer
                    {
                        fixed (float* n_ptr = n) // SpanOrArrayLayer
                        {
                            fixed (float* v_ptr = v) // SpanOrArrayLayer
                            {
                                glInstance.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, c_ptr, n_ptr, v_ptr);
                            }
                        }
                    }
                }
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(this GL.SUNExtension glInstance, in uint rc, in float tc, in float c, in float n, in float v)
        {
            fixed (uint* rc_ptr = &rc) // RefInsteadOfPointerLayer
            fixed (float* tc_ptr = &tc) // RefInsteadOfPointerLayer
            fixed (float* c_ptr = &c) // RefInsteadOfPointerLayer
            fixed (float* n_ptr = &n) // RefInsteadOfPointerLayer
            fixed (float* v_ptr = &v) // RefInsteadOfPointerLayer
            {
                glInstance.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc_ptr, tc_ptr, c_ptr, n_ptr, v_ptr);
            }
        }
    }

#pragma warning restore IDE1006 // Naming Styles
}
