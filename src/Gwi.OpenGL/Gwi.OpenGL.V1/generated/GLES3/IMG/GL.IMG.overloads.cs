// This file is auto generated, do not edit.
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Gwi.OpenGL.GLES3
{
#pragma warning disable IDE1006 // Naming Styles

    public static class IMGOverloads
    {
        // UniformHandleui64vIMG overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void UniformHandleui64vIMG(this GL.IMGExtension glInstance, int location, ReadOnlySpan<ulong> value)
        {
            var count = (int)(value.Length);
            fixed (ulong* value_ptr = value) // SpanOrArrayLayer
            {
                glInstance.UniformHandleui64vIMG(location, count, value_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void UniformHandleui64vIMG(this GL.IMGExtension glInstance, int location, ulong[] value)
        {
            var count = (int)(value.Length);
            fixed (ulong* value_ptr = value) // SpanOrArrayLayer
            {
                glInstance.UniformHandleui64vIMG(location, count, value_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void UniformHandleui64vIMG(this GL.IMGExtension glInstance, int location, int count, in ulong value)
        {
            fixed (ulong* value_ptr = &value) // RefInsteadOfPointerLayer
            {
                glInstance.UniformHandleui64vIMG(location, count, value_ptr);
            }
        }

        // ProgramUniformHandleui64vIMG overloads

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ProgramUniformHandleui64vIMG(this GL.IMGExtension glInstance, ProgramHandle program, int location, ReadOnlySpan<ulong> values)
        {
            var count = (int)(values.Length);
            fixed (ulong* values_ptr = values) // SpanOrArrayLayer
            {
                glInstance.ProgramUniformHandleui64vIMG(program, location, count, values_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.SpanAndArrayOverloader
        public static unsafe void ProgramUniformHandleui64vIMG(this GL.IMGExtension glInstance, ProgramHandle program, int location, ulong[] values)
        {
            var count = (int)(values.Length);
            fixed (ulong* values_ptr = values) // SpanOrArrayLayer
            {
                glInstance.ProgramUniformHandleui64vIMG(program, location, count, values_ptr);
            }
        }

        // Generated by Gwi.OpenGL.BindingGenerator.Parsing.RefInsteadOfPointerOverloader
        public static unsafe void ProgramUniformHandleui64vIMG(this GL.IMGExtension glInstance, ProgramHandle program, int location, int count, in ulong values)
        {
            fixed (ulong* values_ptr = &values) // RefInsteadOfPointerLayer
            {
                glInstance.ProgramUniformHandleui64vIMG(program, location, count, values_ptr);
            }
        }
    }

#pragma warning restore IDE1006 // Naming Styles
}
